U4 L4

Part1: 

class Fraction:
  # See slideshow for a full discussion of this code.
  #
  def __init__(self, num, den):
    self.__n = num
    self.__d = den

  def getNum(self):
    return self.__n

  def getDen(self):
    return self.__d

  def setNum(self, num):
    self.__n = num

  def setDen(self, den):
    self.__d = den

  def __str__(self):
    return "{0}/{1}".format(self.__n, self.__d)

class Fraction2(Fraction):
  def __init__(self, num, den):
    Fraction.__init__(self, num, den)

  def check(self):
    if self.getDen() == 0:
      return "yes"
    else:
      return "no"


# driver code
f = Fraction(3, 4)
x = Fraction2.check(f)
print(f)
print(x)

Part2: 

class Fraction:
  # See slideshow for a full discussion of this code.
  #
  def __init__(self, num, den):
    self.__n = num
    self.__d = den

  def getNum(self):
    return self.__n

  def getDen(self):
    return self.__d

  def setNum(self, num):
    self.__n = num

  def setDen(self, den):
    self.__d = den

  def __str__(self):
    return "{0}/{1}".format(self.__n, self.__d)


class Fraction2(Fraction):
  def __init__(self, num, den, mul):
    self.mul = mul
    self.__n = num
    self.__d = den

    Fraction.__init__(self, num, den)

  def check(self):
    if self.getDen() == 0:
      return "yes"
    else:
      return "no"

  def __str__(self):
    return "{0}/{1}".format(self.mul * self.__n, self.mul * self.__d)

# driver code
f = Fraction(3, 4)
multiply = 2
x = Fraction2(3, 4, multiply)
print(f)
print(x)
