U4 L1

import math as m

def mergeSort(arr, l, r):
    if l < r:
        m = l + (r - l) // 2
        mergeSort(arr, l, m)
        mergeSort(arr, m + 1, r)
        merge(arr, l, m, r)

def merge(arr, l, m, r):
    n1 = m - l + 1
    n2 = r - m
    L = [0] * (n1)
    R = [0] * (n2)
    for i in range(0, n1):
        L[i] = arr[l + i]
    for j in range(0, n2):
        R[j] = arr[m + 1 + j]
    i = 0
    j = 0
    k = l
    while i < n1 and j < n2:
        if L[i] <= R[j]:
            arr[k] = L[i]
            i += 1
        else:
            arr[k] = R[j]
            j += 1
        k += 1
    while i < n1:
        arr[k] = L[i]
        i += 1
        k += 1
    while j < n2:
        arr[k] = R[j]
        j += 1
        k += 1

def pyTriple(limit):
    py = []
    for a in range(3, limit + 1):
        if (a ** 2) % 4 == 0:
            temp = []
            A = a
            temp.append(A)
            B = int(((a ** 2) / 4) - 1)
            temp.append(B)
            C = int(((a ** 2) / 4) + 1)
            temp.append(C)
            if (A ** 2) + (B ** 2) == (C ** 2):
                py.append(temp)
        elif a % 2 == 1:
            temp = []
            A = a
            temp.append(A)
            B = (m.floor(a / 2)) * (a + 1)
            temp.append(B)
            C = B + 1
            temp.append(C)
            if (A ** 2) + (B ** 2) == (C ** 2):
                py.append(temp)
    return py

limit = int(input("please input a limit from 3 to 12: "))
if limit <= 12 and limit >= 3:
    triple = pyTriple(limit)
    for i in range(len(triple)):
        temp = []
        for j in range(len(triple[i])):
            temp.append(triple[i][j] ** 2)
        triple.append(temp)

    mergeSort(triple, 0, len(triple) - 1)
    for i in range(len(triple)):
        for j in range(len(triple[i])):
            print("%-4.d" % triple[i][j], end=" ")
        print()
